set(TARGET_NAME "CommonMathMoudle")
project(${TARGET_NAME})

find_package(CUDA)

if(BACKWARD STREQUAL "CUDA")
    if(CUDA_FOUND)
        add_subdirectory(Cuda)
    else()
        message(FATAL_ERROR "An error occurred: cuda not found!")
    endif()
endif()

file(GLOB CURRENT_HEADERS  *.h)
file(GLOB CURRENT_SOURCES  *.cpp)

source_group("Include" FILES ${CURRENT_HEADERS}) 
source_group("Source" FILES ${CURRENT_SOURCES})

if(BACKWARD STREQUAL "CPU")
    add_library(${TARGET_NAME} STATIC ${CURRENT_HEADERS} ${CURRENT_SOURCES})
elseif(BACKWARD STREQUAL "OPENGL")
    add_library(${TARGET_NAME} STATIC ${CURRENT_HEADERS} ${CURRENT_SOURCES})
    target_compile_definitions(${TARGET_NAME} PUBLIC OPENGL_USEFUL)
elseif(BACKWARD STREQUAL "CUDA")
    if(CUDA_FOUND)
        cuda_add_library(${TARGET_NAME} STATIC ${CURRENT_HEADERS} ${CURRENT_SOURCES})
        target_compile_definitions(${TARGET_NAME} PUBLIC CUDA_USEFUL)
        target_compile_definitions(${TARGET_NAME} PUBLIC THREAD_USEFUL)
        target_link_libraries (${TARGET_NAME} CommonMathMoudleGPU)
    else()
        message(FATAL_ERROR "An error occurred: cuda not found!")
    endif()
else()
    message(FATAL_ERROR "An error occurred: undefined backward!")
endif()
